package ch36;
// 제너릭메서드의 문제점:
//타입의 제한을 안정하면 어떤 타입이든 가능해서 문제가 발생할수있다.
//해결점:
//<T extends 클래스> 사용하기
//이 "클래스"에서 상속받은 T 클래스(타입)만 T 대신에 쓸수있다.

// 상위 클래스의 필요성
//T 자료형의 범위를 제한 할 수 있음
//상위 클래스에서 선언하거나 정의하는 메서드를 활용할 수 있음
//상속을 받지 않는 경우 T는 Object로 변환되어 Object 클래스가 기본으로 제공하는 메서드만 사용가능
//T extends 를 사용한 프로그래밍
//GenericPrinter 에 material 변수의 자료형을 상속받아 구현
//T에 무작위 클래스가 들어갈 수 없게 Material 클래스를 상속받은 클래스로 한정

public abstract class Material { // 대부분 직접 쓸일은 없기때문에 abstract으로 만든다.
    // 재료들이 공통으로 사용할 메서드들을 추상클래스인 이 조상타입에다가 쓴다.그래야 자손타입들이 이 메서드들을 상속받아서 쓸수잇움.
    public abstract void doPrinting(); // 추상클래스니깐 메서드도 추상메서드여야함.
}
